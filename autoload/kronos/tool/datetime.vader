Before:
  let g_database = resolve(expand('<sfile>:h') . '/kronos')
  let g_dateref = 1526397300 "15/05/2018 15:15 UTC

After:
  call kronos#api#database#Purge(g_database)
  unlet g_database g_dateref
  if exists('scenarios') | unlet scenarios | endif

#------------------------------------------------------------------# Parse due #

Execute (ParseDue (date)):
  let scenarios = [
    \ [':15',   1526342400, '15/05/18'],
    \ [':10',   1528588800, '10/06/18'],
    \ [':20',   1526774400, '20/06/18'],
    \ [':153',  1552608000, '15/03/19'],
    \ [':102',  1549756800, '10/02/19'],
    \ [':201',  1547942400, '20/01/19'],
    \ [':158',  1534291200, '15/08/18'],
    \ [':108',  1533859200, '10/08/18'],
    \ [':2010', 1539993600, '20/10/18'],
    \ [':140117',  'throw', '14/01/17'],
  \]

Then (should parse date (date ref: 15/05/18 15:15 UTC)):
  for [due, expected; comment] in scenarios
    if expected == 'throw'
      AssertThrow kronos#tool#datetime#ParseDue(g_dateref, due)
    else
      AssertEqual expected, kronos#tool#datetime#ParseDue(g_dateref, due)
    endif
  endfor

Execute (ParseDue (time)):
  let scenarios = [
    \ ['::15',   1526396400, '15/05/18 15:00'],
    \ ['::10',   1526464800, '16/05/18 10:00'],
    \ ['::20',   1526414400, '15/05/18 20:00'],
    \ ['::1515', 1526397300, '15/05/18 15:15'],
    \ ['::1530', 1526398200, '15/05/18 15:30'],
    \ ['::12',   1526472000, '16/05/18 12:00'],
    \ ['::080',  1526457600, '16/05/18 08:00'],
    \ ['::0130', 1526434200, '16/05/18 01:30'],
    \ ['::16',   1526400000, '15/05/18 16:00'],
    \ ['::2000', 1526414400, '15/05/18 20:00'],
    \ ['::2330', 1526427000, '15/05/18 23:30'],
  \]

Then (should parse time (date ref: 15/05/18 15:15 UTC)):
  for [due, expected; comment] in scenarios
    AssertEqual expected, kronos#tool#datetime#ParseDue(1526390100, due)
  endfor

Execute (ParseDue (date&time)):
  let scenarios = [
    \ [':155:15',      1526396400, '15/05/18 15:00'],
    \ [':160719:1821', 1563301260, '16/07/19 18:21'],
    \ [':1406:1420',   1528986000, '14/06/18 14:20'],
    \ [':1001:1001',   1547114460, '10/01/19 10:01'],
    \ [':100118:1001',    'throw', '10/01/18 10:01'],
  \]

Then (should parse time (date ref: 15/05/18 15:15 UTC)):
  for [due, expected; comment] in scenarios
    if expected == 'throw'
      AssertThrow kronos#tool#datetime#ParseDue(1526390100, due)
    else
      AssertEqual expected, kronos#tool#datetime#ParseDue(1526390100, due)
    endif
  endfor

